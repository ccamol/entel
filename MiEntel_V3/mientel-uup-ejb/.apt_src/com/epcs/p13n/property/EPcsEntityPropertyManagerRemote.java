package com.epcs.p13n.property;

/*
 ** This file was automatically generated by 
 ** EJBGen WebLogic Server 10.3.2.0  Tue Oct 20 12:16:15 PDT 2009 1267925 
 */

import java.rmi.RemoteException;

import com.bea.p13n.property.EntityNotFoundException;
import com.bea.p13n.property.EntityPropertyManager;

/**
 * * Esta clase implementa los metodos necesarios para unificar las propiedades
 * de perfiles de un usuario determinado a traves de los metodos que provee la
 * interface EntityPropertyManager. Este EJB esta registrado con el
 * administrador de perfiles del framework de Weblogic en el EJB deployment
 * descriptor. Este EntityPropertyManager gestiona las propiedades de usuarios
 * con base en un servicio web externo consultado por medio del numero del
 * movil.
 */

public interface EPcsEntityPropertyManagerRemote extends EntityPropertyManager {

	/**
	 * * Create a record for a new user entity, as identified by the given
	 * jndiHomeName (User or Group) and pkString. A custom EntityPropertyManager
	 * is not used as the default EntityPropertyManager for the ProfileManager,
	 * so you do not have to return a unique id for your user. Only the default
	 * EntityPropertyManager is required to return a unique number. Simply
	 * return -1.
	 * 
	 * @param jndiHomeNamethe
	 *            entity's home name
	 * @param pkStringthe
	 *            entity's identifier string
	 * @return the newly created unique user entity id
	 * @exception ConfigurableEntityCreateExceptionif
	 *                there is an error
	 * 
	 * @weblogic.ejbgen.RemoteMethod
	 */
	public long createUniqueId(String jndiHomeName, String pkString)
			throws RemoteException,
			com.bea.p13n.property.ConfigurableEntityCreateException;

	/**
	 * * Only the default EntityPropertyManager has to support this method. A
	 * custom EntityPropertyManager can simply throw
	 * java.lang.UnsupportedOperationException
	 * 
	 * @weblogic.ejbgen.RemoteMethod
	 */
	public String[] getDynamicProperties(
			com.bea.p13n.property.PropertyLocator locator, String propertySet)
			throws RemoteException,
			com.bea.p13n.property.EntityNotFoundException;

	/**
	 * * Only the default EntityPropertyManager has to support this method. A
	 * custom EntityPropertyManager can simply throw
	 * java.lang.UnsupportedOperationException
	 * 
	 * @weblogic.ejbgen.RemoteMethod
	 */
	public String[] getEntityNames(String jndiName) throws RemoteException;

	/**
	 * * Only the default EntityPropertyManager has to support this method. A
	 * custom EntityPropertyManager can simply throw
	 * java.lang.UnsupportedOperationException
	 * 
	 * @weblogic.ejbgen.RemoteMethod
	 */
	public String getHomeName(long anEntityId) throws RemoteException,
			com.bea.p13n.property.EntityNotFoundException;

	/**
	 * * Este metodo devuelve un EntityPropertyCache que contiene todas las
	 * propiedades asociadas a un movil dado como parametro en el atributo
	 * PropertyLocator.
	 * 
	 * @param locator
	 *            un objeto PropertyLocator que identifica la entidad del
	 *            usuario.
	 * @return un objeto EntityPropertyCache que encapsula las propiedades del
	 *         usuario.
	 * @exception EntityNotFoundException
	 *                si el usuario definido en el PropertyLocator no existe.
	 * 
	 * @weblogic.ejbgen.RemoteMethod
	 */
	public com.bea.p13n.property.EntityPropertyCache getProperties(
			com.bea.p13n.property.PropertyLocator locator)
			throws RemoteException,
			com.bea.p13n.property.EntityNotFoundException;

	/**
	 * * Este metodo devuelve el valor de una propiedad definida para el nombre
	 * y conjunto de propiedades definidas como parametro. Si la propiedad no
	 * tiene un valor asociado, se retornara un valor nulo.
	 * 
	 * @param locatorun
	 *            objeto PropertyLocator que identifica al usuario del que se
	 *            buscan las propiedades.
	 * @param propertySetel
	 *            nombre del conjunto de propiedades
	 * @param propertyNameel
	 *            nombre de la propiedad
	 * @return el valor de la propiedad o nulo si no se encuentra.
	 * @exception EntityNotFoundException
	 *                si la entidad que representa al usuario no existe.
	 * 
	 * @weblogic.ejbgen.RemoteMethod
	 */
	public Object getProperty(com.bea.p13n.property.PropertyLocator locator,
			String propertySetName, String propertyName)
			throws RemoteException,
			com.bea.p13n.property.EntityNotFoundException;

	/**
	 * * Only the default EntityPropertyManager has to support this method. A
	 * custom EntityPropertyManager can simply throw
	 * java.lang.UnsupportedOperationException
	 * 
	 * @weblogic.ejbgen.RemoteMethod
	 */
	public com.bea.p13n.property.PropertyLocator getPropertyLocator(
			long anEntityId) throws RemoteException,
			com.bea.p13n.property.EntityNotFoundException;

	/**
	 * * Only the default EntityPropertyManager has to support this method. A
	 * custom EntityPropertyManager can simply throw
	 * java.lang.UnsupportedOperationException
	 * 
	 * @weblogic.ejbgen.RemoteMethod
	 */
	public long getUniqueId(String jndiHomeName, String pkString)
			throws RemoteException,
			com.bea.p13n.property.EntityNotFoundException;

	/**
	 * * Remove all properties, and the entity record, for the user entity
	 * identified by the given property locator.
	 * 
	 * @param locatorthe
	 *            PropertyLocator identifying the entity to remove
	 * @exception EntityNotFoundExceptionif
	 *                the entity identified by the property locator does not
	 *                exist
	 * 
	 * @weblogic.ejbgen.RemoteMethod
	 */
	public void removeEntity(com.bea.p13n.property.PropertyLocator locator)
			throws RemoteException,
			com.bea.p13n.property.EntityNotFoundException;

	/**
	 * * Remueve todos los valores de las propiedades asociadas con la entidad
	 * de usuario especificada por identificador de propiedades. Despues dd que
	 * un valor es removido, las siguientes llamadas a getProperty() deben
	 * retornar null.
	 * 
	 * @param locatorPropertyLocator
	 *            identificador de la entidad del usuario.
	 * @exception EntityNotFoundExceptionsi
	 *                la entidad identificada por el atributo locator no existe
	 * 
	 * @weblogic.ejbgen.RemoteMethod
	 */
	public void removeProperties(com.bea.p13n.property.PropertyLocator locator)
			throws RemoteException,
			com.bea.p13n.property.EntityNotFoundException;

	/**
	 * * Remueve un valor de una propiedad especifica asociada a una entidad
	 * deusuario identificada por medio de una propiedad llamada locator.
	 * 
	 * @param locatorPropertyLocator
	 *            identificador de la entidad del usuario.
	 * @param propertySetel
	 *            conjunto de propiedades qu contiene la propiedad a remover.
	 * @param propertyNameel
	 *            nombre dela propiedad a remover
	 * @return el valor que tenia la propiedad
	 * @exception EntityNotFoundExceptionsi
	 *                la entidad identificada por el atributo locator no existe
	 * 
	 * @weblogic.ejbgen.RemoteMethod
	 */
	public Object removeProperty(com.bea.p13n.property.PropertyLocator locator,
			String propertySetName, String propertyName)
			throws RemoteException,
			com.bea.p13n.property.EntityNotFoundException;

	/**
	 * * Sets the property identified by the given property set and property
	 * name to the given value for the user entity specified by the given
	 * property locator.
	 * 
	 * @param locatora
	 *            PropertyLocator identifying the user entity to modify
	 * @param propertySetthe
	 *            property set containing the property to modify
	 * @param propertyNamethe
	 *            name of the property to modify
	 * @param valuethe
	 *            value to persist for the given property and user entity
	 * @exception PropertyValidationExceptionif
	 *                the value is not valid for the given property
	 * @exception EntityNotFoundExceptionif
	 *                the entity identified by the property locator does not
	 *                exist
	 * 
	 * @weblogic.ejbgen.RemoteMethod
	 */
	public void setProperty(com.bea.p13n.property.PropertyLocator locator,
			String propertySet, String propertyName, Object propertyValue)
			throws RemoteException,
			com.bea.p13n.property.PropertyValidationException,
			com.bea.p13n.property.EntityNotFoundException;

}
